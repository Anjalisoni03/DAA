 #include<stdio.h>
 #include<conio.h>
 int max(int a,int b)
 {
    return ((a>b)?a:b);
 }
 int KS(int wt[],int val[],int W,int n)
 {
    int i,w;
    int K[n+1][W+1];    //created matrix
    for(i=0;i<=n;i++)
    {
        for(w=0;w<=W;w++)
        {
            if(i==0||w==0)
            {
               K[i][w]=0;
            }
            else if(wt[i-1]<=w)
            {
                K[i][w] = max(val[i - 1]+ K[i - 1][w - wt[i - 1]],K[i - 1][w]);
            }
            else
            {
                K[i][w] = K[i - 1][w];
            }
        }
    }
    return K[n][W];
 }
 int main()
 {
    int wt[]={3,2,4,1};
    int val[]={100,20,60,40};
    int W=6;
    int n=sizeof(val)/sizeof(val[0]);
    printf("%d",KS(wt,val,W,n));
    return 0;
 }
//complexity O(M*N) 
